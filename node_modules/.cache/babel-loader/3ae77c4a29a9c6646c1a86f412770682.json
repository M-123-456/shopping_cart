{"ast":null,"code":"import create from 'zustand';\nimport { v4 } from 'uuid'; // Types\n\nimport { getProducts } from './data/products';\nimport { getProductsByKeyword } from './data/products';\nexport const useStore = create((set, get) => ({\n  // products\n  products: [],\n  filteredProducts: [],\n  loadProducts: async () => {\n    const _products = await getProducts();\n\n    set(state => ({\n      products: _products\n    }));\n  },\n  // todo change filterArticles to be able to search with more than one word\n  filterProducts: searchWords => {\n    set(state => {\n      const filtered = getProductsByKeyword(searchWords);\n      return {\n        filteredProducts: filtered\n      };\n    });\n  },\n  // shopping cart\n  shoppingCart: [],\n  emptyCart: () => {\n    set(state => ({\n      shoppingCart: []\n    }));\n  },\n  addToCart: product => {\n    const shoppingCart = get().shoppingCart;\n    const currentProduct = shoppingCart.find(item => item.productId === product.productId); // if the product already exists in the cart, change quantity\n\n    set(state => {\n      if (currentProduct) {\n        const _shoppingCart = state.shoppingCart.map(item => item.productId === product.productId ? { ...item,\n          quantity: item.quantity += product.quantity\n        } : item);\n\n        return {\n          shoppingCart: _shoppingCart\n        };\n      } else {\n        return {\n          shoppingCart: [...state.shoppingCart, product]\n        };\n      }\n    });\n  },\n  changeProductQuantity: product => {\n    set(state => {\n      const _shoppingCart = state.shoppingCart.map(item => item.productId === product.productId ? product : item);\n\n      return {\n        shoppingCart: _shoppingCart\n      };\n    });\n  },\n  deleteProduct: id => {\n    set(state => {\n      const filtered = state.shoppingCart.filter(product => product.productId !== id);\n      return {\n        shoppingCart: filtered\n      };\n    });\n  },\n  // users\n  allUsers: [],\n  loginUserId: 4,\n  loginUserDetails: undefined,\n  setLoginUserDetails: user => {\n    set(state => ({\n      loginUserDetails: user\n    }));\n  },\n  // order\n  order: {\n    orderId: undefined,\n    userId: undefined,\n    orderedDate: undefined,\n    products: undefined,\n    deliveryAddress: undefined,\n    paymentMethod: \"creditCard\"\n  },\n  setPaymentMethod: method => {\n    set(state => ({\n      order: { ...state.order,\n        paymentMethod: method\n      }\n    }));\n  },\n  setDeliveryAddress: address => {\n    set(state => ({\n      order: { ...state.order,\n        deliveryAddress: address\n      }\n    }));\n  },\n  executeOrder: (userId, shoppingCart, deliveryAddress) => {\n    set(state => ({\n      order: { ...state.order,\n        orderId: v4(),\n        userId: userId,\n        orderedDate: new Date(),\n        products: shoppingCart\n      }\n    }));\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","v4","getProducts","getProductsByKeyword","useStore","set","get","products","filteredProducts","loadProducts","_products","state","filterProducts","searchWords","filtered","shoppingCart","emptyCart","addToCart","product","currentProduct","find","item","productId","_shoppingCart","map","quantity","changeProductQuantity","deleteProduct","id","filter","allUsers","loginUserId","loginUserDetails","undefined","setLoginUserDetails","user","order","orderId","userId","orderedDate","deliveryAddress","paymentMethod","setPaymentMethod","method","setDeliveryAddress","address","executeOrder","Date"],"sources":["/home/user/Documents/D01_JS/SPA/react/exercises/react_store03_shopping-cart-M-123-456/src/store.ts"],"sourcesContent":["import create from 'zustand';\nimport { v4 } from 'uuid';\n\n// Types\nimport { IProductState } from './types/products/IProductState';\nimport { IShoppingCartState } from './types/shoppingCart/IShoppingCartState';\nimport { IUsers } from './types/users/IUsers';\nimport { IOrderState } from './types/order/IOrderState';\n\nimport { getProducts } from './data/products';\nimport { getProductsByKeyword } from './data/products';\n\n\nexport const useStore = create<IProductState & IShoppingCartState & IUsers & IOrderState>((set, get) => ({\n    // products\n    products: [],\n    filteredProducts: [],\n    loadProducts: async() => {\n        const _products = await getProducts();\n        set((state) => ({\n            products: _products\n        }))\n    },\n    // todo change filterArticles to be able to search with more than one word\n    filterProducts: (searchWords) => {\n        set((state) => {\n            const filtered = getProductsByKeyword(searchWords);\n            return {\n                filteredProducts: filtered\n            }\n        })\n    },\n    // shopping cart\n    shoppingCart: [],\n    emptyCart: () => {\n        set((state) => ({\n            shoppingCart: []\n        }))\n    },\n    addToCart: ( product ) => {\n        const shoppingCart = get().shoppingCart;\n        const currentProduct = shoppingCart.find(item => item.productId === product.productId);\n        // if the product already exists in the cart, change quantity\n        set((state) => {\n            if (currentProduct) {\n                const _shoppingCart = state.shoppingCart.map(item => item.productId === product.productId ? { ...item, quantity: item.quantity += product.quantity } : item)\n                return {\n                    shoppingCart: _shoppingCart\n                };\n            } else {\n                return {\n                    shoppingCart: [\n                        ...state.shoppingCart,\n                        product\n                    ]\n                }\n            }\n        })\n    },\n    changeProductQuantity: (product) => {\n        set((state) => {\n            const _shoppingCart = state.shoppingCart.map(item => item.productId === product.productId ? product : item);\n            return {\n                shoppingCart: _shoppingCart\n            }\n        })\n    },\n    deleteProduct: (id) => {\n        set((state) => {\n            const filtered = state.shoppingCart.filter(product => product.productId !== id);\n            return {\n                shoppingCart: filtered\n            }\n        })\n    },\n    // users\n    allUsers: [],\n    loginUserId: 4,\n    loginUserDetails: undefined,\n    setLoginUserDetails: (user) => {\n        set((state) => ({\n            loginUserDetails: user\n        }))\n    },\n    // order\n    order: {\n        orderId: undefined,\n        userId: undefined,\n        orderedDate: undefined,\n        products: undefined, \n        deliveryAddress: undefined,\n        paymentMethod: \"creditCard\",\n    },\n    setPaymentMethod: (method) => {\n        set(state => ({\n            order: {\n                ...state.order,\n                paymentMethod: method\n            }\n        }))\n    },\n    setDeliveryAddress: (address) => {\n        set(state => ({\n            order: {\n                ...state.order,\n                deliveryAddress: address\n            }\n        }))\n    },\n    executeOrder: (userId, shoppingCart, deliveryAddress) => {\n        set(state => ({\n            order: {\n                ...state.order,\n                orderId: v4(),\n                userId: userId,\n                orderedDate: new Date(),\n                products: shoppingCart,\n            }\n        }))\n    }\n}))\n\nexport default useStore;"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,SAASC,EAAT,QAAmB,MAAnB,C,CAEA;;AAMA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AAGA,OAAO,MAAMC,QAAQ,GAAGJ,MAAM,CAA4D,CAACK,GAAD,EAAMC,GAAN,MAAe;EACrG;EACAC,QAAQ,EAAE,EAF2F;EAGrGC,gBAAgB,EAAE,EAHmF;EAIrGC,YAAY,EAAE,YAAW;IACrB,MAAMC,SAAS,GAAG,MAAMR,WAAW,EAAnC;;IACAG,GAAG,CAAEM,KAAD,KAAY;MACZJ,QAAQ,EAAEG;IADE,CAAZ,CAAD,CAAH;EAGH,CAToG;EAUrG;EACAE,cAAc,EAAGC,WAAD,IAAiB;IAC7BR,GAAG,CAAEM,KAAD,IAAW;MACX,MAAMG,QAAQ,GAAGX,oBAAoB,CAACU,WAAD,CAArC;MACA,OAAO;QACHL,gBAAgB,EAAEM;MADf,CAAP;IAGH,CALE,CAAH;EAMH,CAlBoG;EAmBrG;EACAC,YAAY,EAAE,EApBuF;EAqBrGC,SAAS,EAAE,MAAM;IACbX,GAAG,CAAEM,KAAD,KAAY;MACZI,YAAY,EAAE;IADF,CAAZ,CAAD,CAAH;EAGH,CAzBoG;EA0BrGE,SAAS,EAAIC,OAAF,IAAe;IACtB,MAAMH,YAAY,GAAGT,GAAG,GAAGS,YAA3B;IACA,MAAMI,cAAc,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBJ,OAAO,CAACI,SAArD,CAAvB,CAFsB,CAGtB;;IACAjB,GAAG,CAAEM,KAAD,IAAW;MACX,IAAIQ,cAAJ,EAAoB;QAChB,MAAMI,aAAa,GAAGZ,KAAK,CAACI,YAAN,CAAmBS,GAAnB,CAAuBH,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBJ,OAAO,CAACI,SAA3B,GAAuC,EAAE,GAAGD,IAAL;UAAWI,QAAQ,EAAEJ,IAAI,CAACI,QAAL,IAAiBP,OAAO,CAACO;QAA9C,CAAvC,GAAkGJ,IAAjI,CAAtB;;QACA,OAAO;UACHN,YAAY,EAAEQ;QADX,CAAP;MAGH,CALD,MAKO;QACH,OAAO;UACHR,YAAY,EAAE,CACV,GAAGJ,KAAK,CAACI,YADC,EAEVG,OAFU;QADX,CAAP;MAMH;IACJ,CAdE,CAAH;EAeH,CA7CoG;EA8CrGQ,qBAAqB,EAAGR,OAAD,IAAa;IAChCb,GAAG,CAAEM,KAAD,IAAW;MACX,MAAMY,aAAa,GAAGZ,KAAK,CAACI,YAAN,CAAmBS,GAAnB,CAAuBH,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBJ,OAAO,CAACI,SAA3B,GAAuCJ,OAAvC,GAAiDG,IAAhF,CAAtB;;MACA,OAAO;QACHN,YAAY,EAAEQ;MADX,CAAP;IAGH,CALE,CAAH;EAMH,CArDoG;EAsDrGI,aAAa,EAAGC,EAAD,IAAQ;IACnBvB,GAAG,CAAEM,KAAD,IAAW;MACX,MAAMG,QAAQ,GAAGH,KAAK,CAACI,YAAN,CAAmBc,MAAnB,CAA0BX,OAAO,IAAIA,OAAO,CAACI,SAAR,KAAsBM,EAA3D,CAAjB;MACA,OAAO;QACHb,YAAY,EAAED;MADX,CAAP;IAGH,CALE,CAAH;EAMH,CA7DoG;EA8DrG;EACAgB,QAAQ,EAAE,EA/D2F;EAgErGC,WAAW,EAAE,CAhEwF;EAiErGC,gBAAgB,EAAEC,SAjEmF;EAkErGC,mBAAmB,EAAGC,IAAD,IAAU;IAC3B9B,GAAG,CAAEM,KAAD,KAAY;MACZqB,gBAAgB,EAAEG;IADN,CAAZ,CAAD,CAAH;EAGH,CAtEoG;EAuErG;EACAC,KAAK,EAAE;IACHC,OAAO,EAAEJ,SADN;IAEHK,MAAM,EAAEL,SAFL;IAGHM,WAAW,EAAEN,SAHV;IAIH1B,QAAQ,EAAE0B,SAJP;IAKHO,eAAe,EAAEP,SALd;IAMHQ,aAAa,EAAE;EANZ,CAxE8F;EAgFrGC,gBAAgB,EAAGC,MAAD,IAAY;IAC1BtC,GAAG,CAACM,KAAK,KAAK;MACVyB,KAAK,EAAE,EACH,GAAGzB,KAAK,CAACyB,KADN;QAEHK,aAAa,EAAEE;MAFZ;IADG,CAAL,CAAN,CAAH;EAMH,CAvFoG;EAwFrGC,kBAAkB,EAAGC,OAAD,IAAa;IAC7BxC,GAAG,CAACM,KAAK,KAAK;MACVyB,KAAK,EAAE,EACH,GAAGzB,KAAK,CAACyB,KADN;QAEHI,eAAe,EAAEK;MAFd;IADG,CAAL,CAAN,CAAH;EAMH,CA/FoG;EAgGrGC,YAAY,EAAE,CAACR,MAAD,EAASvB,YAAT,EAAuByB,eAAvB,KAA2C;IACrDnC,GAAG,CAACM,KAAK,KAAK;MACVyB,KAAK,EAAE,EACH,GAAGzB,KAAK,CAACyB,KADN;QAEHC,OAAO,EAAEpC,EAAE,EAFR;QAGHqC,MAAM,EAAEA,MAHL;QAIHC,WAAW,EAAE,IAAIQ,IAAJ,EAJV;QAKHxC,QAAQ,EAAEQ;MALP;IADG,CAAL,CAAN,CAAH;EASH;AA1GoG,CAAf,CAA5D,CAAvB;AA6GP,eAAeX,QAAf"},"metadata":{},"sourceType":"module"}