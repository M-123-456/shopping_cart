{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useStore } from '../store'; // Types\n\nexport const useLoginUser = () => {\n  _s();\n\n  const loginUserId = useStore(state => state.loginUserId);\n  const setLoginUserDetails = useStore(state => state.setLoginUserDetails);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const getLoginUserDetails = async url => {\n    setLoading(true);\n\n    try {\n      const res = await axios.get(url);\n\n      if (res.status === 200) {\n        const user = res.data.find(user => user.id === loginUserId);\n\n        if (user) {\n          setLoading(false);\n          setLoginUserDetails(user);\n        } else {\n          setLoading(false);\n          setMessage('User cannot be found');\n        }\n      }\n    } catch (err) {\n      setLoading(false);\n      setMessage('Problem with loading user data');\n    }\n  };\n\n  return {\n    loading,\n    message,\n    getLoginUserDetails\n  };\n};\n\n_s(useLoginUser, \"lf62ePVeooG/lZlyZjJRqSlZbfs=\", false, function () {\n  return [useStore, useStore];\n});","map":{"version":3,"names":["useState","axios","useStore","useLoginUser","loginUserId","state","setLoginUserDetails","loading","setLoading","message","setMessage","getLoginUserDetails","url","res","get","status","user","data","find","id","err"],"sources":["/home/user/Documents/D01_JS/SPA/react/exercises/react_store03_shopping-cart-M-123-456/src/hooks/useLoginUser.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\nimport { useStore } from '../store';\n\n// Types\nimport { IUser } from '../types/users/IUser';\n\nexport const useLoginUser = () => {\n    const loginUserId = useStore(state => state.loginUserId);\n    const setLoginUserDetails = useStore(state => state.setLoginUserDetails);\n\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState('');\n\n    const getLoginUserDetails = async( url: string ) => {\n        setLoading(true);\n        try {\n            const res = await axios.get<IUser[]>(url);\n            if(res.status === 200) {\n                const user = res.data.find(user => user.id === loginUserId);\n                if(user) {\n                    setLoading(false);\n                    setLoginUserDetails(user);\n                } else {\n                    setLoading(false);\n                    setMessage('User cannot be found');\n                }\n            }\n        } catch (err) {\n            setLoading(false);\n            setMessage('Problem with loading user data')\n        }\n    }\n    return { loading, message, getLoginUserDetails }\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,UAAzB,C,CAEA;;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAC9B,MAAMC,WAAW,GAAGF,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA5B;EACA,MAAME,mBAAmB,GAAGJ,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACC,mBAAhB,CAApC;EAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMW,mBAAmB,GAAG,MAAOC,GAAP,IAAwB;IAChDJ,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACA,MAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAmBF,GAAnB,CAAlB;;MACA,IAAGC,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAuB;QACnB,MAAMC,IAAI,GAAGH,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYf,WAAlC,CAAb;;QACA,IAAGY,IAAH,EAAS;UACLR,UAAU,CAAC,KAAD,CAAV;UACAF,mBAAmB,CAACU,IAAD,CAAnB;QACH,CAHD,MAGO;UACHR,UAAU,CAAC,KAAD,CAAV;UACAE,UAAU,CAAC,sBAAD,CAAV;QACH;MACJ;IACJ,CAZD,CAYE,OAAOU,GAAP,EAAY;MACVZ,UAAU,CAAC,KAAD,CAAV;MACAE,UAAU,CAAC,gCAAD,CAAV;IACH;EACJ,CAlBD;;EAmBA,OAAO;IAAEH,OAAF;IAAWE,OAAX;IAAoBE;EAApB,CAAP;AACH,CA3BM;;GAAMR,Y;UACWD,Q,EACQA,Q"},"metadata":{},"sourceType":"module"}